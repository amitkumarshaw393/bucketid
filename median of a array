//Input: nums1 = [1,3], nums2 = [2]
//Output: 2.00000
//Explanation: merged array = [1,2,3] and median is 2.
//




class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        vector<int>arr; 
        double sum,n;
for(int i=0;i<nums1.size();i++) arr.push_back(nums1[i]);
for(int i=0;i<nums2.size();i++) arr.push_back(nums2[i]);
int x = arr.size();
sort(arr.begin(),arr.end());
if(x%2==0) {n=x; sum = ((arr[(n/2)-1] + arr[(n/2)])/2.0);}
else  {n=x; sum = arr[(n-1)/2.0];}

return sum;
    }
};
